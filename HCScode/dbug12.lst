C:\Program Files\MiniIDE\ChangeEQUs\dbug12.lst - generated by MGTEK Assembler ASM12 V1.26 Build 144 for WIN32 (x86) - Wed Oct 22 03:48:25 2008

    1:                                 ;; D-BUG12 Emulator
    2:                                 ;; Copyright (c) 1998, Thomas Almy. All rights reserved. 
    3:                                 ;; Revised October 1999.
    4:                                 ;; License is granted users of his 68HC12 Simulator
    5:                                 ;; to use this file as part of their own programs for
    6:                                 ;; educational or personal (but not commercial) use. This
    7:                                 ;; file may not be given or sold to anyone without permission
    8:                                 ;; of the author. 
    9:                                 ;; Thomas Almy makes no representation about the suitability
   10:                                 ;; of this software for any purpose. It is provided as is without
   11:                                 ;; warranty of any kind, expressed or implied.
   12:                                 
   13:                                 ;; ***How to use the D-BUG12 Emulator***
   14:                                 ; The D-BUG12 Emulator is a minimal implementation which has the following
   15:                                 ; functionality:
   16:                                 ; 1. Handles the reset vector.
   17:                                 ; 2. Implements SetUserVector, GetChar, Putchar (if you want more, feel free
   18:                                 ;    to add the functionality and send your extension back to me for
   19:                                 ;    incorporation in future versions of this file).
   20:                                 ; 3. Allows SWI to end program execution
   21:                                 ; 4. Disables COP timer, set stack pointer, initializes SCI 0 to 9600bps,
   22:                                 ;    sets clock stretch, and clears X bit as part of initialization.
   23:                                 ; 
   24:                                 ; Naturally a full D-BUG12 emulation is not necessary, because the 68HC12
   25:                                 ; simulator has the capabilities of the D-BUG12 user interface.
   26:                                 ;
   27:                                 ; To use this routine, first assemble it. Then:
   28:                                 ; 1. From the Simulator, load DBUG12.S19.
   29:                                 ; 2. Load your program.
   30:                                 ; 3. Do a reset, then "go". Execution will stop at a BGND instruction.
   31:                                 ; 4. Set the PC to the start of your program, if not at $4000.
   32:                                 ; 5. Use "go" or "trace" normally.
   33:                                 ; 6. If execution stops with a D-BUG12 BGND instruction with the next 
   34:                                 ;    instruction displayed being a "BRA", register X contains the vector
   35:                                 ;    number of the interrupt that occured (i.e., 27 ($1b) would be an SWI
   36:                                 ;    instruction.)
   37:                                 ; 7. If execution stops with a D-BUG12 BGND instruction where the next 
   38:                                 ;    instruction displayed being a "RTS", this is an un-implemented D-BUG12
   39:                                 ;    routine. Feel free to write it for extra credit.
   40:                                 
   41:                                 
   42:                                 #include EQUATES.ASM
    1:                                 ;; 68HC12 Equates
    2:                                 
    3:                                 ;; Copyright (c) 1998, Thomas Almy. All rights reserved. 
    4:                                 
    5:                                 ;; License is granted users of his 68HC12 Simulator
    6:                                 
    7:                                 ;; to use this file as part of their own programs for
    8:                                 
    9:                                 ;; educational or personal (but not commercial) use. This
   10:                                 
   11:                                 ;; file may not be given or sold to anyone without permission
   12:                                 
   13:                                 ;; of the author. 
   14:                                 
   15:                                 ;; Thomas Almy makes no representation about the suitability
   16:                                 
   17:                                 ;; of this software for any purpose. It is provided as is without
   18:                                 
   19:                                 ;; warranty of any kind, expressed or implied.
   20:                                 
   21:                                 
   22:                                 
   23:          =00000000              REGBASE EQU     $0      ; Register base
   24:                                 
   25:          =00000800              RAMSTART EQU    $800    ; Start of internal RAM
   26:                                 
   27:          =00000A00              RAMEND  EQU     $A00    ; Start of DBUG internal RAM 
   28:                                 
   29:                                                         ; (can't use this!)
   30:                                 
   31:          =00004000              PRSTART EQU     $4000   ; Start of program Memory
   32:                                 
   33:                                 ;; Functions in the D-BUG12
   34:                                 
   35:                                 
   36:                                 
   37:          =0000FE1A              SetUserVector   EQU   $fe1a   ; Thse are the only functions
   38:                                 
   39:                                                                 ; implemented in the Emulator
   40:                                 
   41:                                 
   42:                                 
   43:          =00000007              UserPortHKWU    EQU     7       ; Equates for SetUserVector() function
   44:                                 
   45:          =00000008              UserPortJKWU    EQU     8
   46:                                 
   47:          =00000009              UserAtoD        EQU     9
   48:                                 
   49:          =0000000A              UserSCI1        EQU     10
   50:                                 
   51:          =0000000B              UserSCI0        EQU     11
   52:                                 
   53:          =0000000C              UserSPI0        EQU     12
   54:                                 
   55:          =00000017              UserTimerCh0    EQU     23
   56:                                 
   57:          =00000016              UserTimerCh1    EQU     22
   58:                                 
   59:          =00000015              UserTimerCh2    EQU     21
   60:                                 
   61:          =00000014              UserTimerCh3    EQU     20
   62:                                 
   63:          =00000013              UserTimerCh4    EQU     19
   64:                                 
   65:          =00000012              UserTimerCh5    EQU     18
   66:                                 
   67:          =00000011              UserTimerCh6    EQU     17
   68:                                 
   69:          =00000010              UserTimerCh7    EQU     16 
   70:                                 
   71:          =0000000E              UserPAccOvf     EQU     14
   72:                                 
   73:          =0000000D              UserPAccEdge    EQU     13
   74:                                 
   75:          =0000000F              UserTimerOvf    EQU     15
   76:                                 
   77:          =00000018              UserRTI         EQU     24
   78:                                 
   79:          =00000019              UserIRQ         EQU     25
   80:                                 
   81:          =0000001A              UserXIRQ        EQU     26
   82:                                 
   83:          =0000001B              UserSWI         EQU     27
   84:                                 
   85:          =0000001C              UserTrap        EQU     28
   86:                                 
   87:          =FFFFFFFF              RAMVectAddr     EQU     -1
   88:                                 
   89:                                 
   90:                                 
   91:          =00000000              PORTA   EQU     $00+REGBASE
   92:                                 
   93:          =00000001              PORTB   EQU     $01+REGBASE
   94:                                 
   95:          =00000002              DDRA    EQU     $02+REGBASE
   96:                                 
   97:          =00000003              DDRB    EQU     $03+REGBASE
   98:                                 
   99:          =00000004              PORTC   EQU     $04+REGBASE
  100:                                 
  101:          =00000005              PORTD   EQU     $05+REGBASE
  102:                                 
  103:          =00000006              DDRC    EQU     $06+REGBASE
  104:                                 
  105:          =00000007              DDRD    EQU     $07+REGBASE
  106:                                 
  107:          =00000008              PORTE   EQU     $08+REGBASE
  108:                                 
  109:          =00000009              DDRE    EQU     $09+REGBASE
  110:                                 
  111:          =0000000A              PEAR    EQU     $0A+REGBASE
  112:                                 
  113:          =0000000B              MODE    EQU     $0B+REGBASE
  114:                                 
  115:          =0000000C              PUCR    EQU     $0C+REGBASE
  116:                                 
  117:          =0000000D              RDRIV   EQU     $0D+REGBASE
  118:                                 
  119:          =00000010              INITRM  EQU     $10+REGBASE     ; IO Registers
  120:                                 
  121:          =00000011              INITRG  EQU     $11+REGBASE
  122:                                 
  123:          =00000012              INITEE  EQU     $12+REGBASE
  124:                                 
  125:          =00000013              MISC    EQU     $13+REGBASE
  126:                                 
  127:          =00000014              RTICTL  EQU     $14+REGBASE
  128:                                 
  129:          =00000015              RTIFLG  EQU     $15+REGBASE
  130:                                 
  131:          =00000016              COPCTL  EQU     $16+REGBASE
  132:                                 
  133:          =00000017              COPRST  EQU     $17+REGBASE
  134:                                 
  135:          =00000018              ITST0   EQU     $18+REGBASE
  136:                                 
  137:          =00000019              ITST1   EQU     $19+REGBASE
  138:                                 
  139:          =0000001A              ITST2   EQU     $1A+REGBASE
  140:                                 
  141:          =0000001B              ITST3   EQU     $1B+REGBASE
  142:                                 
  143:          =0000001E              INTCR   EQU     $1E+REGBASE
  144:                                 
  145:          =0000001F              HPRIO   EQU     $1F+REGBASE
  146:                                 
  147:          =00000024              PORTH   EQU     $24+REGBASE
  148:                                 
  149:          =00000025              DDRH    EQU     $25+REGBASE
  150:                                 
  151:          =00000026              KWIEH   EQU     $26+REGBASE
  152:                                 
  153:          =00000027              KWIFH   EQU     $27+REGBASE
  154:                                 
  155:          =00000028              PORTJ   EQU     $28+REGBASE
  156:                                 
  157:          =00000029              DDRJ    EQU     $29+REGBASE
  158:                                 
  159:          =0000002A              KWIEJ   EQU     $2A+REGBASE
  160:                                 
  161:          =0000002B              KWIFJ   EQU     $2B+REGBASE
  162:                                 
  163:          =0000002C              KPOLJ   EQU     $2C+REGBASE
  164:                                 
  165:          =0000002D              PUPSJ   EQU     $2D+REGBASE
  166:                                 
  167:          =0000002E              PULEJ   EQU     $2E+REGBASE
  168:                                 
  169:          =00000030              PORTF   EQU     $30+REGBASE
  170:                                 
  171:          =00000031              PORTG   EQU     $31+REGBASE
  172:                                 
  173:          =00000032              DDRF    EQU     $32+REGBASE
  174:                                 
  175:          =00000033              DDRG    EQU     $33+REGBASE
  176:                                 
  177:          =00000034              DPAGE   EQU     $34+REGBASE
  178:                                 
  179:          =00000035              PPAGE   EQU     $35+REGBASE
  180:                                 
  181:          =00000036              EPAGE   EQU     $36+REGBASE
  182:                                 
  183:          =00000037              WINDEF  EQU     $37+REGBASE
  184:                                 
  185:          =00000038              MXAR    EQU     $38+REGBASE
  186:                                 
  187:          =0000003C              CSCTL0  EQU     $3C+REGBASE
  188:                                 
  189:          =0000003D              CSCTL1  EQU     $3D+REGBASE
  190:                                 
  191:          =0000003E              CSSTR0  EQU     $3E+REGBASE
  192:                                 
  193:          =0000003F              CSSTR1  EQU     $3F+REGBASE
  194:                                 
  195:          =00000040              LDV     EQU     $40+REGBASE
  196:                                 
  197:          =00000042              RDV     EQU     $42+REGBASE
  198:                                 
  199:          =00000047              CLKCTL  EQU     $47+REGBASE
  200:                                 
  201:          =00000060              ATDCTL0 EQU     $60+REGBASE
  202:                                 
  203:          =00000061              ATDCTL1 EQU     $61+REGBASE
  204:                                 
  205:          =00000062              ATDCTL2 EQU     $62+REGBASE
  206:                                 
  207:          =00000063              ATDCTL3 EQU     $63+REGBASE
  208:                                 
  209:          =00000064              ATDCTL4 EQU     $64+REGBASE
  210:                                 
  211:          =00000065              ATDCTL5 EQU     $65+REGBASE
  212:                                 
  213:          =00000066              ATDSTAT EQU     $66+REGBASE
  214:                                 
  215:          =00000068              ATDTEST EQU     $68+REGBASE
  216:                                 
  217:          =0000006F              PORTAD  EQU     $6F+REGBASE
  218:                                 
  219:          =00000070              ADR0H   EQU     $70+REGBASE
  220:                                 
  221:          =00000072              ADR1H   EQU     $72+REGBASE
  222:                                 
  223:          =00000074              ADR2H   EQU     $74+REGBASE
  224:                                 
  225:          =00000076              ADR3H   EQU     $76+REGBASE
  226:                                 
  227:          =00000078              ADR4H   EQU     $78+REGBASE
  228:                                 
  229:          =0000007A              ADR5H   EQU     $7A+REGBASE
  230:                                 
  231:          =0000007C              ADR6H   EQU     $7C+REGBASE
  232:                                 
  233:          =0000007E              ADR7H   EQU     $7E+REGBASE
  234:                                 
  235:          =00000080              TIOS    EQU     $80+REGBASE
  236:                                 
  237:          =00000081              CFORC   EQU     $81+REGBASE
  238:                                 
  239:          =00000082              OC7M    EQU     $82+REGBASE
  240:                                 
  241:          =00000083              OC7D    EQU     $83+REGBASE
  242:                                 
  243:          =00000084              TCNT    EQU     $84+REGBASE
  244:                                 
  245:          =00000086              TSCR    EQU     $86+REGBASE
  246:                                 
  247:          =00000088              TCTL1   EQU     $88+REGBASE
  248:                                 
  249:          =00000089              TCTL2   EQU     $89+REGBASE
  250:                                 
  251:          =0000008A              TCTL3   EQU     $8A+REGBASE
  252:                                 
  253:          =0000008B              TCTL4   EQU     $8B+REGBASE
  254:                                 
  255:          =0000008C              TMSK1   EQU     $8C+REGBASE
  256:                                 
  257:          =0000008D              TMSK2   EQU     $8D+REGBASE
  258:                                 
  259:          =0000008E              TFLG1   EQU     $8E+REGBASE
  260:                                 
  261:          =0000008F              TFLG2   EQU     $8F+REGBASE
  262:                                 
  263:          =00000090              TC0     EQU     $90+REGBASE
  264:                                 
  265:          =00000092              TC1     EQU     $92+REGBASE
  266:                                 
  267:          =00000094              TC2     EQU     $94+REGBASE
  268:                                 
  269:          =00000096              TC3     EQU     $96+REGBASE
  270:                                 
  271:          =00000098              TC4     EQU     $98+REGBASE
  272:                                 
  273:          =0000009A              TC5     EQU     $9A+REGBASE
  274:                                 
  275:          =0000009C              TC6     EQU     $9C+REGBASE
  276:                                 
  277:          =0000009E              TC7     EQU     $9E+REGBASE
  278:                                 
  279:          =000000A0              PACTL   EQU     $A0+REGBASE
  280:                                 
  281:          =000000A1              PAFLG   EQU     $A1+REGBASE
  282:                                 
  283:          =000000A2              PACNT   EQU     $A2+REGBASE
  284:                                 
  285:          =000000AD              TIMTST  EQU     $AD+REGBASE
  286:                                 
  287:          =000000AE              PORTT   EQU     $AE+REGBASE
  288:                                 
  289:          =000000AF              DDRT    EQU     $AF+REGBASE
  290:                                 
  291:          =000000C0              SC0BDH  EQU     $C0+REGBASE
  292:                                 
  293:          =000000C1              SC0BDL  EQU     $C1+REGBASE
  294:                                 
  295:          =000000C2              SC0CR1  EQU     $C2+REGBASE
  296:                                 
  297:          =000000C3              SC0CR2  EQU     $C3+REGBASE
  298:                                 
  299:          =000000C4              SC0SR1  EQU     $C4+REGBASE
  300:                                 
  301:          =000000C5              SC0SR2  EQU     $C5+REGBASE
  302:                                 
  303:          =000000C6              SC0DRH  EQU     $C6+REGBASE
  304:                                 
  305:          =000000C7              SC0DRL  EQU     $C7+REGBASE
  306:                                 
  307:          =000000C8              SC1BDH  EQU     $C8+REGBASE
  308:                                 
  309:          =000000C9              SC1BDL  EQU     $C9+REGBASE
  310:                                 
  311:          =000000CA              SC1CR1  EQU     $CA+REGBASE
  312:                                 
  313:          =000000CB              SC1CR2  EQU     $CB+REGBASE
  314:                                 
  315:          =000000CC              SC1SR1  EQU     $CC+REGBASE
  316:                                 
  317:          =000000CD              SC1SR2  EQU     $CD+REGBASE
  318:                                 
  319:          =000000CE              SC1DRH  EQU     $CE+REGBASE
  320:                                 
  321:          =000000CF              SC1DRL  EQU     $CF+REGBASE
  322:                                 
  323:          =000000D0              SP0CR1  EQU     $D0+REGBASE
  324:                                 
  325:          =000000D1              SP0CR2  EQU     $D1+REGBASE
  326:                                 
  327:          =000000D2              SP0BR   EQU     $D2+REGBASE
  328:                                 
  329:          =000000D3              SP0SR   EQU     $D3+REGBASE
  330:                                 
  331:          =000000D5              SP0DR   EQU     $D5+REGBASE
  332:                                 
  333:          =000000D6              PORTS   EQU     $D6+REGBASE
  334:                                 
  335:          =000000D7              DDRS    EQU     $D7+REGBASE
  336:                                 
  337:          =000000F0              EEMCR   EQU     $F0+REGBASE
  338:                                 
  339:          =000000F1              EEPROT  EQU     $F1+REGBASE
  340:                                 
  341:          =000000F2              EETST   EQU     $F2+REGBASE
  342:                                 
  343:          =000000F3              EEPROG  EQU     $F3+REGBASE
   43:          =00000A00                      ORG     $A00    ; RAM interrupt table
   44:     0A00 +003A                  table   ds      58
   45:          =00000A3A              tabend  equ     *
   46:                                 ;; Routine Vector table
   47:                                 
   48:          =0000FE00                      ORG     $FE00
   49:     FE00 F000                           dc.w      die
   50:     FE02 F0A9                           dc.w      getchar
   51:     FE04 F0B0                           dc.w      putchar
   52:     FE06 F000                           dc.w      die
   53:     FE08 F000                           dc.w      die
   54:     FE0A F000                           dc.w      die
   55:     FE0C F000                           dc.w      die
   56:     FE0E F000                           dc.w      die
   57:     FE10 F000                           dc.w      die
   58:     FE12 F000                           dc.w      die
   59:     FE14 F000                           dc.w      die
   60:     FE16 F000                           dc.w      die
   61:     FE18 F000                           dc.w      die
   62:     FE1A F0B7                           dc.w      setuv   ; $fe1a
   63:     FE1C F000                           dc.w      die
   64:     FE1E F000                           dc.w      die
   65:     FE20 F000                           dc.w      die
   66:     FE22 F000                           dc.w      die
   67:          =0000FFCE                      ORG     $FFCE   ; Vector table
   68:     FFCE F096                           dc.w      keyhint ; ffce
   69:     FFD0 F091                           dc.w      keyjint ; ffd0
   70:     FFD2 F08C                           dc.w      atdint  ; ffd2
   71:     FFD4 F087                           dc.w      sci1int ; ffd4
   72:     FFD6 F082                           dc.w      sci0int ; ffd6
   73:     FFD8 F07D                           dc.w      spiint  ; ffd8
   74:     FFDA F04B                           dc.w      paieint ; ffda
   75:     FFDC F050                           dc.w      paoint  ; ffdc
   76:     FFDE F046                           dc.w      tovint  ; ffde
   77:     FFE0 F078                           dc.w      tc7int  ; ffe0
   78:     FFE2 F073                           dc.w      tc6int  ; ffe2  
   79:     FFE4 F06E                           dc.w      tc5int  ; ffe4
   80:     FFE6 F069                           dc.w      tc4int  ; ffe6
   81:     FFE8 F064                           dc.w      tc3int  ; ffe8
   82:     FFEA F05F                           dc.w      tc2int  ; ffea
   83:     FFEC F05A                           dc.w      tc1int  ; ffec
   84:     FFEE F055                           dc.w      tc0int  ; ffee
   85:     FFF0 F041                           dc.w      rtiint  ; fff0
   86:     FFF2 F03C                           dc.w      irqint  ; fff2
   87:     FFF4 F037                           dc.w      xirqint ; fff4
   88:     FFF6 F02D                           dc.w      swiint  ; fff6
   89:     FFF8 F032                           dc.w      trapint ; fff8
   90:     FFFA 0017                           dc.w      coprst  ; fffa
   91:     FFFC F002                           dc.w      clkrst  ; fffc
   92:     FFFE F002                           dc.w      rstrst  ; fffe
   93:                                         
   94:          =0000F000                      ORG     $F000   ; Start of "ROM"
   95:     F000 00                     die:    bgnd            ; We can't handle call
   96:     F001 3D                             rts             ; so stop then return
   97:     F002                        clkrst:
   98:                                 ;SKT REMOVED  coprst:
   99:     F002                        rstrst: ; On reset, clear the user table,
  100:                                         ; set the stack pointer, clear the X flag
  101:                                         ; turn off clock timer, set the ECLK delays
  102:                                         ; and return to the monitor
  103:     F002 CE 0A00                        ldx     #table
  104:     F005 69 30                  l1:     clr     1,X+
  105:     F007 8E 0A3A                        cpx     #tabend
  106:     F00A 26 F9                          bne     l1
  107:     F00C 79 0016                        clr     COPCTL
  108:     F00F 180B 35 003E                   movb    #$35 CSSTR0
  109:     F014 180B FF 003F                   movb    #$ff CSSTR1
  110:     F019 10 BF                          andcc   #$bf
  111:     F01B 1803 0034 00C0                 movw    #52 SC0BDH
  112:     F021 180B 0C 00C3                   movb    #$0c SC0CR2
  113:     F026 CF 0A00                        lds     #$a00
  114:     F029 00                     l2:     bgnd            ; Stop, then proceed to $4000
  115:     F02A 06 4000                        jmp     PRSTART
  116:     F02D CE 0036                swiint: ldx     #UserSWI*2
  117:     F030 20 67                          bra     handler
  118:     F032 CE 0038                trapint: ldx    #UserTrap*2
  119:     F035 20 62                          bra     handler
  120:     F037 CE 0034                xirqint: ldx    #UserXIRQ*2
  121:     F03A 20 5D                          bra     handler
  122:     F03C CE 0032                irqint: ldx     #UserIRQ*2
  123:     F03F 20 58                          bra     handler
  124:     F041 CE 0030                rtiint: ldx     #UserRTI*2
  125:     F044 20 53                          bra     handler
  126:     F046 CE 001E                tovint: ldx     #UserTimerOvf*2
  127:     F049 20 4E                          bra     handler
  128:     F04B CE 001A                paieint: ldx    #UserPAccEdge*2
  129:     F04E 20 49                          bra     handler
  130:     F050 CE 001C                paoint: ldx     #UserPAccOvf*2
  131:     F053 20 44                          bra     handler
  132:     F055 CE 002E                tc0int: ldx     #UserTimerCh0*2
  133:     F058 20 3F                          bra     handler
  134:     F05A CE 002C                tc1int: ldx     #UserTimerCh1*2
  135:     F05D 20 3A                          bra     handler
  136:     F05F CE 002A                tc2int: ldx     #UserTimerCh2*2
  137:     F062 20 35                          bra     handler
  138:     F064 CE 0028                tc3int: ldx     #UserTimerCh3*2
  139:     F067 20 30                          bra     handler
  140:     F069 CE 0026                tc4int: ldx     #UserTimerCh4*2
  141:     F06C 20 2B                          bra     handler
  142:     F06E CE 0024                tc5int: ldx     #UserTimerCh5*2
  143:     F071 20 26                          bra     handler
  144:     F073 CE 0022                tc6int: ldx     #UserTimerCh6*2
  145:     F076 20 21                          bra     handler
  146:     F078 CE 0020                tc7int: ldx     #UserTimerCh7*2
  147:     F07B 20 1C                          bra     handler
  148:     F07D CE 0018                spiint: ldx     #UserSPI0*2
  149:     F080 20 17                          bra     handler
  150:     F082 CE 0016                sci0int: ldx    #UserSCI0*2
  151:     F085 20 12                          bra     handler
  152:     F087 CE 0014                sci1int: ldx    #UserSCI1*2
  153:     F08A 20 0D                          bra     handler
  154:     F08C CE 0012                atdint: ldx     #UserAtoD*2
  155:     F08F 20 08                          bra     handler
  156:     F091 CE 0010                keyjint: ldx    #UserPortJKWU*2
  157:     F094 20 03                          bra     handler
  158:     F096 CE 000E                keyhint: ldx    #UserPortHKWU*2
  159:     F099 ED E2 0A00             handler: ldy    table,X         ; See if there is a vector
  160:     F09D 27 02                          beq     noHandler
  161:     F09F 05 40                          jmp     0,Y
  162:     F0A1                        noHandler:
  163:     F0A1 B7C5                           xgdx
  164:     F0A3 49                             lsrd
  165:     F0A4 B7C5                           xgdx
  166:     F0A6 00                             bgnd                    ; Stop because no handler
  167:                                                                 ; X has table index
  168:     F0A7 20 F8                          bra     noHandler
  169:                                 
  170:     F0A9                        getchar:
  171:     F0A9 4F C4 20 FC                    brclr   SC0SR1 #$20, getchar    ; wait for character available
  172:     F0AD D6 C7                          ldab    SC0DRL
  173:     F0AF 3D                             rts
  174:                                 
  175:     F0B0                        putchar:
  176:     F0B0 4F C4 80 FC                    brclr   SC0SR1 #$80, putchar     ; wait until buffer clear
  177:     F0B4 5B C7                          stab    SC0DRL
  178:     F0B6 3D                             rts
  179:                                 
  180:     F0B7 8C FFFF                setuv:  cpd     #-1     ; Check value
  181:     F0BA 26 08                          bne     setvec  ; set vector if not -1
  182:     F0BC CC 0A00                        ldd     #table  ; else return table address
  183:     F0BF 3D                             rts
  184:     F0C0                        outOfRange:
  185:     F0C0 CC FFFF                        ldd     #-1     ; invalid request
  186:     F0C3 3D                             rts
  187:     F0C4 8C 0007                setvec: cpd     #UserPortHKWU
  188:     F0C7 2D F7                          blt     outOfRange
  189:     F0C9 8C 001C                        cpd     #UserTrap
  190:     F0CC 2E F2                          bgt     outOfRange
  191:     F0CE 59                             asld
  192:     F0CF C3 0A00                        addd    #table
  193:     F0D2 B7 45                          tfr     D X     ; put offset into x
  194:     F0D4 1802 82 00                     movw    2,SP 0,X        ; set value
  195:     F0D8 CC 0000                        ldd     #0
  196:     F0DB 3D                             rts
  197:                                 

Symbols:
adr0h                            00000070
adr1h                            00000072
adr2h                            00000074
adr3h                            00000076
adr4h                            00000078
adr5h                            0000007a
adr6h                            0000007c
adr7h                            0000007e
atdctl0                          00000060
atdctl1                          00000061
atdctl2                          00000062
atdctl3                          00000063
atdctl4                          00000064
atdctl5                          00000065
atdint                          *0000f08c
atdstat                          00000066
atdtest                          00000068
cforc                            00000081
clkctl                           00000047
clkrst                          *0000f002
copctl                          *00000016
coprst                          *00000017
csctl0                           0000003c
csctl1                           0000003d
csstr0                          *0000003e
csstr1                          *0000003f
ddra                             00000002
ddrb                             00000003
ddrc                             00000006
ddrd                             00000007
ddre                             00000009
ddrf                             00000032
ddrg                             00000033
ddrh                             00000025
ddrj                             00000029
ddrs                             000000d7
ddrt                             000000af
die                             *0000f000
dpage                            00000034
eemcr                            000000f0
eeprog                           000000f3
eeprot                           000000f1
eetst                            000000f2
epage                            00000036
getchar                         *0000f0a9
handler                         *0000f099
hprio                            0000001f
initee                           00000012
initrg                           00000011
initrm                           00000010
intcr                            0000001e
irqint                          *0000f03c
itst0                            00000018
itst1                            00000019
itst2                            0000001a
itst3                            0000001b
keyhint                         *0000f096
keyjint                         *0000f091
kpolj                            0000002c
kwieh                            00000026
kwiej                            0000002a
kwifh                            00000027
kwifj                            0000002b
l1                              *0000f005
l2                               0000f029
ldv                              00000040
misc                             00000013
mode                             0000000b
mxar                             00000038
nohandler                       *0000f0a1
oc7d                             00000083
oc7m                             00000082
outofrange                      *0000f0c0
pacnt                            000000a2
pactl                            000000a0
paflg                            000000a1
paieint                         *0000f04b
paoint                          *0000f050
pear                             0000000a
porta                            00000000
portad                           0000006f
portb                            00000001
portc                            00000004
portd                            00000005
porte                            00000008
portf                            00000030
portg                            00000031
porth                            00000024
portj                            00000028
ports                            000000d6
portt                            000000ae
ppage                            00000035
prstart                         *00004000
pucr                             0000000c
pulej                            0000002e
pupsj                            0000002d
putchar                         *0000f0b0
ramend                           00000a00
ramstart                         00000800
ramvectaddr                      ffffffff
rdriv                            0000000d
rdv                              00000042
regbase                         *00000000
rstrst                          *0000f002
rtictl                           00000014
rtiflg                           00000015
rtiint                          *0000f041
sc0bdh                          *000000c0
sc0bdl                           000000c1
sc0cr1                           000000c2
sc0cr2                          *000000c3
sc0drh                           000000c6
sc0drl                          *000000c7
sc0sr1                          *000000c4
sc0sr2                           000000c5
sc1bdh                           000000c8
sc1bdl                           000000c9
sc1cr1                           000000ca
sc1cr2                           000000cb
sc1drh                           000000ce
sc1drl                           000000cf
sc1sr1                           000000cc
sc1sr2                           000000cd
sci0int                         *0000f082
sci1int                         *0000f087
setuservector                    0000fe1a
setuv                           *0000f0b7
setvec                          *0000f0c4
sp0br                            000000d2
sp0cr1                           000000d0
sp0cr2                           000000d1
sp0dr                            000000d5
sp0sr                            000000d3
spiint                          *0000f07d
swiint                          *0000f02d
tabend                          *00000a3a
table                           *00000a00
tc0                              00000090
tc0int                          *0000f055
tc1                              00000092
tc1int                          *0000f05a
tc2                              00000094
tc2int                          *0000f05f
tc3                              00000096
tc3int                          *0000f064
tc4                              00000098
tc4int                          *0000f069
tc5                              0000009a
tc5int                          *0000f06e
tc6                              0000009c
tc6int                          *0000f073
tc7                              0000009e
tc7int                          *0000f078
tcnt                             00000084
tctl1                            00000088
tctl2                            00000089
tctl3                            0000008a
tctl4                            0000008b
tflg1                            0000008e
tflg2                            0000008f
timtst                           000000ad
tios                             00000080
tmsk1                            0000008c
tmsk2                            0000008d
tovint                          *0000f046
trapint                         *0000f032
tscr                             00000086
useratod                        *00000009
userirq                         *00000019
userpaccedge                    *0000000d
userpaccovf                     *0000000e
userporthkwu                    *00000007
userportjkwu                    *00000008
userrti                         *00000018
usersci0                        *0000000b
usersci1                        *0000000a
userspi0                        *0000000c
userswi                         *0000001b
usertimerch0                    *00000017
usertimerch1                    *00000016
usertimerch2                    *00000015
usertimerch3                    *00000014
usertimerch4                    *00000013
usertimerch5                    *00000012
usertimerch6                    *00000011
usertimerch7                    *00000010
usertimerovf                    *0000000f
usertrap                        *0000001c
userxirq                        *0000001a
windef                           00000037
xirqint                         *0000f037

